{"version":3,"sources":["views/shared/components/HighlightedInformation.js","views/shared/functions/smoothScrollTop.js","views/shared/components/PropsRoute.js","views/shared/components/NavigationDrawer.js","views/logged_in/components/dashboard/AccountInformationArea.js","views/shared/components/EnhancedTableHead.js","views/logged_in/components/dashboard/Toggles.js","views/logged_in/components/dashboard/Dashboard.js","views/logged_in/components/Routing.js","views/logged_in/components/navigation/MessageListItem.js","views/logged_in/components/navigation/MessagePopperButton.js","views/logged_in/components/navigation/NavBar.js","views/shared/components/ConsecutiveSnackbarMessages.js","views/logged_in/dummy_data/persons.js","views/logged_in/components/Main.js"],"names":["withStyles","theme","main","backgroundColor","palette","warning","light","border","borderWidth","padding","spacing","borderRadius","shape","withTheme","props","className","children","classes","classNames","variant","globLastC","Infinity","smoothScrollTopRec","c","document","documentElement","scrollTop","body","window","requestAnimationFrame","scrollTo","smoothScrollTop","setTimeout","PropsRoute","component","rest","render","routeProps","finalProps","Object","assign","React","createElement","renderMergedProps","withWidth","closeIcon","marginRight","headSection","width","blackList","common","black","height","noDecoration","textDecoration","open","onClose","anchor","menuItems","selectedItem","useEffect","onresize","isWidthUp","style","paddingTop","paddingBottom","justifyContent","disableGutters","onClick","aria-label","color","map","element","link","to","button","selected","name","disableRipple","disableTouchRipple","icon","primary","paper","borderBottomLeftRadius","borderBottomRightRadius","toolbar","scaleMinus","transform","from","spin","animation","listItemSecondaryAction","paddingRight","toggleAccountActivation","isAccountActivated","Paper","Toolbar","Box","display","alignItems","mr","ListItemText","secondary","ListItemIcon","ListItemSecondaryAction","Switch","checked","inputProps","tableSortLabel","cursor","userSelect","noIcon","paddingFix","paddingLeft","order","orderBy","rows","onRequestSort","createSortHandler","useCallback","property","event","TableHead","TableRow","row","index","TableCell","align","numeric","sortDirection","Tooltip","title","placement","enterDelay","TableSortLabel","active","id","direction","Typography","label","tableWrapper","overflowX","blackBackground","contentWrapper","breakpoints","down","dBlock","dNone","firstData","toggles","handleDeleteTargetDialogOpen","console","log","Accordion","AccordionSummary","expandIcon","AccordionDetails","length","Table","aria-labelledby","rowCount","TableBody","toggle","hover","tabIndex","scope","type","value","IconButton","iconButton","blackIcon","HighlightedInformation","Dashboard","selectDashboard","pushMessageToSnackbar","mt","gutterBottom","Toggles","conditions","field","operation","Routing","wrapper","path","margin","up","marginLeft","marginTop","marginBottom","memo","MessageListItem","message","divider","useState","hasErrorOccurred","setHasErrorOccurred","handleError","ListItem","ListItemAvatar","Avatar","src","onError","text","formatDistance","date","Date","tabContainer","overflowY","maxHeight","popoverPaper","maxWidth","noShadow","boxShadow","messages","anchorEl","useRef","isOpen","setIsOpen","handleClick","handleClickAway","buttonRef","aria-describedby","Popover","disableScrollLock","current","anchorOrigin","vertical","horizontal","transformOrigin","AppBar","position","pt","pl","pb","pr","Divider","List","dense","appBar","shadows","white","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarToolbar","accountAvatar","drawerPaper","whiteSpace","smBordered","menuLink","iconListItem","textPrimary","mobileItemSelected","brandText","fontFamily","fontWeight","username","justifyCenter","permanentDrawerListItem","selectedTab","links","isMobileOpen","setIsMobileOpen","openMobileDrawer","closeMobileDrawer","desktop","fontSize","mobile","Hidden","smUp","xsDown","alt","process","Drawer","ref","node","click","NavigationDrawer","root","getPushMessageFromChild","messageInfo","setMessageInfo","queue","processQueue","shift","handleClose","_","reason","pushMessage","push","key","getTime","Snackbar","disableWindowBlurListener","autoHideDuration","onExited","ContentProps","data","Main","setSelectedTab","hasFetchedCardChart","setHasFetchedCardChart","setMessages","setPushMessageToSnackbar","fetchRandomMessages","array","i","j","Math","floor","random","shuffle","persons","iterations","curUnix","round","reverse","ConsecutiveSnackbarMessages"],"mappings":"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","file":"static/js/6.6396595e.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Typography, withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  main: {\n    backgroundColor: theme.palette.warning.light,\n    border: `${theme.border.borderWidth}px solid ${theme.palette.warning.main}`,\n    padding: theme.spacing(2),\n    borderRadius: theme.shape.borderRadius\n  }\n});\n\nfunction HighlighedInformation(props) {\n  const { className, children, classes } = props;\n  return (\n    <div className={classNames(classes.main, className ? className : null)}>\n      <Typography variant=\"body2\">{children}</Typography>\n    </div>\n  );\n}\n\nHighlighedInformation.propTypes = {\n  classes: PropTypes.object.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n    PropTypes.array\n  ]).isRequired,\n  className: PropTypes.string\n};\n\nexport default withStyles(styles, { withTheme: true })(HighlighedInformation);\n","/**\n * When called scrolls smooth to the top of the page.\n * globLastC prevents shaky animations when scrolling to\n * bottom while topscrolling.\n */\nlet globLastC = Infinity;\n\nfunction smoothScrollTopRec() {\n  const c = document.documentElement.scrollTop || document.body.scrollTop;\n  if (c > 0 && globLastC > c) {\n    globLastC = c;\n    window.requestAnimationFrame(smoothScrollTopRec);\n    window.scrollTo(0, c - c / 8);\n  } else {\n    globLastC = Infinity;\n  }\n}\n\nfunction smoothScrollTop() {\n  /**\n   * Normally this gets called from componentDidMount()\n   * Not waiting a tiny fraction of time can lead\n   * to shaky behaviour\n   */\n  setTimeout(() => {\n    smoothScrollTopRec();\n  }, 10);\n}\n\nexport default smoothScrollTop;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route } from \"react-router-dom\";\n\nconst renderMergedProps = (component, ...rest) => {\n  const finalProps = Object.assign({}, ...rest);\n  return React.createElement(component, finalProps);\n};\n\n/**\n * Wrapper around the Router component, which makes it pass the properties\n * to it's child.\n * Taken from https://github.com/ReactTraining/react-router/issues/4105\n */\nconst PropsRoute = ({ component, ...rest }) => (\n  <Route\n    {...rest}\n    render={routeProps => renderMergedProps(component, routeProps, rest)}\n  />\n);\n\nPropsRoute.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.elementType, PropTypes.node])\n};\n\nexport default PropsRoute;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Drawer,\n  withStyles,\n  IconButton,\n  Typography,\n  withWidth,\n  isWidthUp,\n  Toolbar\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst styles = theme => ({\n  closeIcon: {\n    marginRight: theme.spacing(0.5)\n  },\n  headSection: {\n    width: 200\n  },\n  blackList: {\n    backgroundColor: theme.palette.common.black,\n    height: \"100%\"\n  },\n  noDecoration: {\n    textDecoration: \"none !important\"\n  }\n});\n\nfunction NavigationDrawer(props) {\n  const {\n    width,\n    open,\n    onClose,\n    anchor,\n    classes,\n    menuItems,\n    selectedItem,\n    theme\n  } = props;\n\n  useEffect(() => {\n    window.onresize = () => {\n      if (isWidthUp(\"sm\", width) && open) {\n        onClose();\n      }\n    };\n  }, [width, open, onClose]);\n\n  return (\n    <Drawer variant=\"temporary\" open={open} onClose={onClose} anchor={anchor}>\n      <Toolbar className={classes.headSection}>\n        <ListItem\n          style={{\n            paddingTop: theme.spacing(0),\n            paddingBottom: theme.spacing(0),\n            height: \"100%\",\n            justifyContent: anchor === \"left\" ? \"flex-start\" : \"flex-end\"\n          }}\n          disableGutters\n        >\n          <ListItemIcon className={classes.closeIcon}>\n            <IconButton onClick={onClose} aria-label=\"Close Navigation\">\n              <CloseIcon color=\"primary\" />\n            </IconButton>\n          </ListItemIcon>\n        </ListItem>\n      </Toolbar>\n      <List className={classes.blackList}>\n        {menuItems.map(element => {\n          if (element.link) {\n            return (\n              <Link\n                key={element.name}\n                to={element.link}\n                className={classes.noDecoration}\n                onClick={onClose}\n              >\n                <ListItem\n                  button\n                  selected={selectedItem === element.name}\n                  /**\n                   * We disable ripple as it will make a weird animation\n                   * with primary and secondary color\n                   */\n                  disableRipple\n                  disableTouchRipple\n                >\n                  <ListItemIcon>{element.icon}</ListItemIcon>\n                  <ListItemText\n                    primary={\n                      <Typography variant=\"subtitle1\" className=\"text-white\">\n                        {element.name}\n                      </Typography>\n                    }\n                  />\n                </ListItem>\n              </Link>\n            );\n          }\n          return (\n            <ListItem button key={element.name} onClick={element.onClick}>\n              <ListItemIcon>{element.icon}</ListItemIcon>\n              <ListItemText\n                primary={\n                  <Typography variant=\"subtitle1\" className=\"text-white\">\n                    {element.name}\n                  </Typography>\n                }\n              />\n            </ListItem>\n          );\n        })}\n      </List>\n    </Drawer>\n  );\n}\n\nNavigationDrawer.propTypes = {\n  anchor: PropTypes.string.isRequired,\n  theme: PropTypes.object.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  menuItems: PropTypes.arrayOf(PropTypes.object).isRequired,\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired,\n  selectedItem: PropTypes.string\n};\n\nexport default withWidth()(\n  withStyles(styles, { withTheme: true })(NavigationDrawer)\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport {\n  Paper,\n  Toolbar,\n  ListItemText,\n  ListItemSecondaryAction,\n  ListItemIcon,\n  Switch,\n  Box,\n  withStyles\n} from \"@material-ui/core\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\n\nconst styles = theme => ({\n  paper: {\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0\n  },\n  toolbar: { justifyContent: \"space-between\" },\n  scaleMinus: {\n    transform: \"scaleX(-1)\"\n  },\n  \"@keyframes spin\": {\n    from: { transform: \"rotate(359deg)\" },\n    to: { transform: \"rotate(0deg)\" }\n  },\n  spin: { animation: \"$spin 2s infinite linear\" },\n  listItemSecondaryAction: { paddingRight: theme.spacing(1) }\n});\n\nfunction AccountInformationArea(props) {\n  const { classes, toggleAccountActivation, isAccountActivated } = props;\n  return (\n    <Paper className={classes.paper}>\n      <Toolbar className={classes.toolbar}>\n        <Box display=\"flex\" alignItems=\"center\">\n          <Box mr={2}>\n            <ListItemText\n              primary=\"Status\"\n              secondary={isAccountActivated ? \"Activated\" : \"Not activated\"}\n              className=\"mr-2\"\n            />\n          </Box>\n          <ListItemIcon>\n            <LoopIcon\n              className={classNames(\n                isAccountActivated ? classes.spin : null,\n                classes.scaleMinus\n              )}\n            />\n          </ListItemIcon>\n        </Box>\n        <ListItemSecondaryAction className={classes.listItemSecondaryAction}>\n          <Switch\n            color=\"secondary\"\n            checked={isAccountActivated}\n            onClick={toggleAccountActivation}\n            inputProps={{\n              \"aria-label\": isAccountActivated\n                ? \"Deactivate Account\"\n                : \"Activate Account\"\n            }}\n          />\n        </ListItemSecondaryAction>\n      </Toolbar>\n    </Paper>\n  );\n}\n\nAccountInformationArea.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  toggleAccountActivation: PropTypes.func.isRequired,\n  isAccountActivated: PropTypes.bool.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(AccountInformationArea);\n","import React, { useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport {\n  Typography,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  withStyles\n} from \"@material-ui/core\";\n\nconst styles = theme => ({\n  tableSortLabel: {\n    cursor: \"text\",\n    userSelect: \"auto\",\n    color: \"inherit !important\"\n  },\n  noIcon: {\n    \"& path\": {\n      display: \"none !important\"\n    }\n  },\n  paddingFix: {\n    paddingLeft: theme.spacing(3)\n  }\n});\n\nfunction EnhancedTableHead(props) {\n  const { order, orderBy, rows, onRequestSort, classes } = props;\n\n  const createSortHandler = useCallback(\n    property => event => {\n      onRequestSort(event, property);\n    },\n    [onRequestSort]\n  );\n\n  return (\n    <TableHead>\n      <TableRow>\n        {rows.map((row, index) => (\n          <TableCell\n            key={index}\n            align={row.numeric ? \"right\" : \"inherit\"}\n            padding=\"default\"\n            sortDirection={orderBy === row.name ? order : false}\n            className={index === 0 ? classes.paddingFix : null}\n          >\n            {onRequestSort ? (\n              <Tooltip\n                title=\"Sort\"\n                placement={row.numeric ? \"bottom-end\" : \"bottom-start\"}\n                enterDelay={300}\n              >\n                <TableSortLabel\n                  active={orderBy === row.id}\n                  direction={order}\n                  onClick={createSortHandler(row.id)}\n                >\n                  <Typography variant=\"body2\">{row.label}</Typography>\n                </TableSortLabel>\n              </Tooltip>\n            ) : (\n              <TableSortLabel\n                className={classNames(classes.tableSortLabel, classes.noIcon)}\n              >\n                <Typography variant=\"body2\" className={classes.label}>\n                  {row.label}\n                </Typography>\n              </TableSortLabel>\n            )}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  onRequestSort: PropTypes.func,\n  order: PropTypes.string,\n  orderBy: PropTypes.string,\n  rows: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(EnhancedTableHead);\n","import React, { useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Accordion,\n  AccordionSummary,\n  Typography,\n  AccordionDetails,\n  Table,\n\n  IconButton,\n  TableBody,\n  TableCell,\n  TableRow,\n  withStyles\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport EnhancedTableHead from \"../../../shared/components/EnhancedTableHead\";\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst styles = theme => ({\n  tableWrapper: {\n    overflowX: \"auto\",\n    width: \"100%\"\n  },\n  blackBackground: {\n    backgroundColor: theme.palette.primary.main\n  },\n  contentWrapper: {\n    padding: theme.spacing(3),\n    [theme.breakpoints.down(\"xs\")]: {\n      padding: theme.spacing(2)\n    },\n    width: \"100%\"\n  },\n  dBlock: {\n    display: \"block !important\"\n  },\n  dNone: {\n    display: \"none !important\"\n  },\n  firstData: {\n    paddingLeft: theme.spacing(3)\n  }\n});\n\nconst rows = [\n  {\n    id: \"name\",\n    numeric: false,\n    label: \"Name\"\n  },\n  {\n    id: \"type\",\n    numeric: false,\n    label: \"Type\"\n  },\n  {\n    id: \"state\",\n    numeric: false,\n    label: \"State\"\n  },\n  {\n    id: \"action\",\n    numeric: false,\n    label: \"Action\"\n  }\n];\n\nfunction SubscriptionTable(props) {\n  const { toggles, classes } = props;\n\n\n  const handleDeleteTargetDialogOpen = useCallback(\n    (row) => {console.log(\"deleting row\");},\n    []\n  );\n\n  return (\n    <Accordion>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography>Toggles Project Awesome</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.dBlock}>\n      {\n        toggles.length > 0\n        ? (\n          <Table aria-labelledby=\"tableTitle\">\n          <EnhancedTableHead rowCount={toggles.length} rows={rows} />\n          <TableBody>\n            {toggles\n              .map((toggle, index) => (\n                <TableRow hover tabIndex={-1} key={index}>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    className={classes.firstData}\n                  >\n                    {toggle.name}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {toggle.type}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {toggle.type === \"release\"\n                      ? (toggle.value ? \"On\" : \"Off\")\n                      : \"\"}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    <IconButton\n                      className={classes.iconButton}\n                      onClick={() => {\n                        handleDeleteTargetDialogOpen(index);\n                      }}\n                      aria-label=\"Delete\"\n                    >\n                      <DeleteIcon className={classes.blackIcon} />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n        )\n      : (<HighlightedInformation>\n          No toggles defined yet.\n        </HighlightedInformation>)\n      }\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n\nSubscriptionTable.propTypes = {\n  theme: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  toggles: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(SubscriptionTable);\n","import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Typography, Box } from \"@material-ui/core\";\nimport AccountInformationArea from \"./AccountInformationArea\";\nimport Toggles from \"./Toggles\";\n\nfunction Dashboard(props) {\n  const {\n    selectDashboard,\n    pushMessageToSnackbar,\n    isAccountActivated,\n    toggleAccountActivation,\n  } = props;\n\n  useEffect(selectDashboard, [selectDashboard]);\n\n  return (\n    <Fragment>\n      <Box mt={4}>\n        <Typography variant=\"subtitle1\" gutterBottom>\n          Your Account\n        </Typography>\n      </Box>\n      <AccountInformationArea\n        isAccountActivated={isAccountActivated}\n        toggleAccountActivation={toggleAccountActivation}\n      />\n      <Toggles\n        pushMessageToSnackbar={pushMessageToSnackbar}\n        toggles={[\n          { \n            name: \"myawesometoggle\",\n            type: \"release\",\n            value: true\n          },\n          { \n            name: \"myotherawesometoggle\",\n            type: \"context\",\n            conditions: [{\n              field: \"a\",\n              value: \"b\",\n              operation: \"eq\"\n            }]\n          },\n      ]}\n      />\n    </Fragment>\n  );\n}\n\nDashboard.propTypes = {\n  pushMessageToSnackbar: PropTypes.func,\n  selectDashboard: PropTypes.func.isRequired,\n  isAccountActivated: PropTypes.bool.isRequired,\n  toggleAccountActivation: PropTypes.func,\n};\n\nexport default Dashboard;\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core\";\nimport Dashboard from \"./dashboard/Dashboard\";\nimport PropsRoute from \"../../shared/components/PropsRoute\";\n\nconst styles = (theme) => ({\n  wrapper: {\n    margin: theme.spacing(1),\n    width: \"auto\",\n    [theme.breakpoints.up(\"xs\")]: {\n      width: \"95%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      marginTop: theme.spacing(4),\n      marginBottom: theme.spacing(4),\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      width: \"90%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      width: \"82.5%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      width: \"70%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n});\n\nfunction Routing(props) {\n  const {\n    classes,\n    pushMessageToSnackbar,\n    selectDashboard,\n  } = props;\n  return (\n    <div className={classes.wrapper}>\n      <Switch>\n        <PropsRoute\n          path=\"\"\n          component={Dashboard}\n          pushMessageToSnackbar={pushMessageToSnackbar}\n          selectDashboard={selectDashboard}\n        />\n      </Switch>\n    </div>\n  );\n}\n\nRouting.propTypes = {\n  classes: PropTypes.object.isRequired,\n  pushMessageToSnackbar: PropTypes.func,\n  selectDashboard: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(memo(Routing));\n","import React, { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n} from \"@material-ui/core\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport formatDistance from \"date-fns/formatDistance\";\n\nfunction MessageListItem(props) {\n  const { message, divider } = props;\n  const [hasErrorOccurred, setHasErrorOccurred] = useState(false);\n\n  const handleError = useCallback(() => {\n    setHasErrorOccurred(true);\n  }, [setHasErrorOccurred]);\n\n  return (\n    <ListItem divider={divider}>\n      <ListItemAvatar>\n        {hasErrorOccurred ? (\n          <ErrorIcon color=\"secondary\" />\n        ) : (\n          <Avatar\n            src={hasErrorOccurred ? null : message.src}\n            onError={handleError}\n          />\n        )}\n      </ListItemAvatar>\n      <ListItemText\n        primary={message.text}\n        secondary={`${formatDistance(message.date * 1000, new Date())} ago`}\n      />\n    </ListItem>\n  );\n}\n\nMessageListItem.propTypes = {\n  message: PropTypes.object.isRequired,\n  divider: PropTypes.bool,\n};\n\nexport default MessageListItem;\n","import React, { Fragment, useState, useRef, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Popover,\n  IconButton,\n  AppBar,\n  List,\n  Divider,\n  ListItem,\n  ListItemText,\n  Typography,\n  Box,\n  withStyles,\n} from \"@material-ui/core\";\nimport MessageIcon from \"@material-ui/icons/Message\";\nimport MessageListItem from \"./MessageListItem\";\n\nconst styles = (theme) => ({\n  tabContainer: {\n    overflowY: \"auto\",\n    maxHeight: 350,\n  },\n  popoverPaper: {\n    width: \"100%\",\n    maxWidth: 350,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1),\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: 270,\n    },\n  },\n  divider: {\n    marginTop: -2,\n  },\n  noShadow: {\n    boxShadow: \"none !important\",\n  },\n});\n\nfunction MessagePopperButton(props) {\n  const { classes, messages } = props;\n  const anchorEl = useRef();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClick = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen, setIsOpen]);\n\n  const handleClickAway = useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  const id = isOpen ? \"scroll-playground\" : null;\n  return (\n    <Fragment>\n      <IconButton\n        onClick={handleClick}\n        buttonRef={anchorEl}\n        aria-label=\"Open Messages\"\n        aria-describedby={id}\n        color=\"primary\"\n      >\n        <MessageIcon />\n      </IconButton>\n      <Popover\n        disableScrollLock\n        id={id}\n        open={isOpen}\n        anchorEl={anchorEl.current}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        classes={{ paper: classes.popoverPaper }}\n        onClose={handleClickAway}\n      >\n        <AppBar position=\"static\" color=\"inherit\" className={classes.noShadow}>\n          <Box pt={1} pl={2} pb={1} pr={1}>\n            <Typography variant=\"subtitle1\">Messages</Typography>\n          </Box>\n          <Divider className={classes.divider} />\n        </AppBar>\n        <List dense className={classes.tabContainer}>\n          {messages.length === 0 ? (\n            <ListItem>\n              <ListItemText>\n                You haven&apos;t received any messages yet.\n              </ListItemText>\n            </ListItem>\n          ) : (\n            messages.map((element, index) => (\n              <MessageListItem\n                key={index}\n                message={element}\n                divider={index !== messages.length - 1}\n              />\n            ))\n          )}\n        </List>\n      </Popover>\n    </Fragment>\n  );\n}\n\nMessagePopperButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(MessagePopperButton);\n","import React, { Fragment, useRef, useCallback, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Avatar,\n  Drawer,\n  List,\n  IconButton,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Hidden,\n  Tooltip,\n  Box,\n  withStyles,\n  isWidthUp,\n  withWidth,\n} from \"@material-ui/core\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MessagePopperButton from \"./MessagePopperButton\";\nimport NavigationDrawer from \"../../../shared/components/NavigationDrawer\";\n\nconst styles = (theme) => ({\n  appBar: {\n    boxShadow: theme.shadows[6],\n    backgroundColor: theme.palette.common.white,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"100%\",\n      marginLeft: 0,\n    },\n  },\n  appBarToolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      paddingLeft: theme.spacing(4),\n      paddingRight: theme.spacing(4),\n    },\n  },\n  accountAvatar: {\n    backgroundColor: theme.palette.secondary.main,\n    height: 24,\n    width: 24,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: theme.spacing(1.5),\n      marginRight: theme.spacing(1.5),\n    },\n  },\n  drawerPaper: {\n    height: \"100%vh\",\n    whiteSpace: \"nowrap\",\n    border: 0,\n    width: theme.spacing(7),\n    overflowX: \"hidden\",\n    marginTop: theme.spacing(8),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n    backgroundColor: theme.palette.common.black,\n  },\n  smBordered: {\n    [theme.breakpoints.down(\"xs\")]: {\n      borderRadius: \"50% !important\",\n    },\n  },\n  menuLink: {\n    textDecoration: \"none\",\n    color: theme.palette.text.primary,\n  },\n  iconListItem: {\n    width: \"auto\",\n    borderRadius: theme.shape.borderRadius,\n    paddingTop: 11,\n    paddingBottom: 11,\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  textPrimary: {\n    color: theme.palette.primary.main,\n  },\n  mobileItemSelected: {\n    backgroundColor: `${theme.palette.primary.main} !important`,\n  },\n  brandText: {\n    fontFamily: \"'Baloo Bhaijaan', cursive\",\n    fontWeight: 400,\n  },\n  username: {\n    paddingLeft: 0,\n    paddingRight: theme.spacing(2),\n  },\n  justifyCenter: {\n    justifyContent: \"center\",\n  },\n  permanentDrawerListItem: {\n    justifyContent: \"center\",\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n});\n\nfunction NavBar(props) {\n  const { selectedTab, messages, classes, width } = props;\n  // Will be use to make website more accessible by screen readers\n  const links = useRef([]);\n  const [isMobileOpen, setIsMobileOpen] = useState(false);\n\n  const openMobileDrawer = useCallback(() => {\n    setIsMobileOpen(true);\n  }, [setIsMobileOpen]);\n\n  const closeMobileDrawer = useCallback(() => {\n    setIsMobileOpen(false);\n  }, [setIsMobileOpen]);\n\n\n\n  const menuItems = [\n    {\n      link: \"/c/dashboard\",\n      name: \"Dashboard\",\n      onClick: closeMobileDrawer,\n      icon: {\n        desktop: (\n          <DashboardIcon\n            className={\n              selectedTab === \"Dashboard\" ? classes.textPrimary : \"text-white\"\n            }\n            fontSize=\"small\"\n          />\n        ),\n        mobile: <DashboardIcon className=\"text-white\" />,\n      },\n    }\n  ];\n  return (\n    <Fragment>\n      <AppBar position=\"sticky\" className={classes.appBar}>\n        <Toolbar className={classes.appBarToolbar}>\n          <Box display=\"flex\" alignItems=\"center\">\n            <Hidden smUp>\n              <Box mr={1}>\n                <IconButton\n                  aria-label=\"Open Navigation\"\n                  onClick={openMobileDrawer}\n                  color=\"primary\"\n                >\n                  <MenuIcon />\n                </IconButton>\n              </Box>\n            </Hidden>\n            <Hidden xsDown>\n              <Typography\n                variant=\"h4\"\n                className={classes.brandText}\n                display=\"inline\"\n                color=\"secondary\"\n              >\n                T\n              </Typography>\n              <Typography\n                variant=\"h4\"\n                className={classes.brandText}\n                display=\"inline\"\n                color=\"primary\"\n              >\n                o\n              </Typography>\n              <Typography\n                variant=\"h4\"\n                className={classes.brandText}\n                display=\"inline\"\n                color=\"secondary\"\n              >\n                ggl\n              </Typography>\n              <Typography\n                variant=\"h4\"\n                className={classes.brandText}\n                display=\"inline\"\n                color=\"primary\"\n              >\n                ee\n              </Typography>\n            </Hidden>\n          </Box>\n          <Box\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            alignItems=\"center\"\n            width=\"100%\"\n          >\n            <MessagePopperButton messages={messages} />\n            <ListItem\n              disableGutters\n              className={classNames(classes.iconListItem, classes.smBordered)}\n            >\n              <Avatar\n                alt=\"profile picture\"\n                src={`${process.env.PUBLIC_URL}/images/logged_in/profilePicture.jpg`}\n                className={classNames(classes.accountAvatar)}\n              />\n              {isWidthUp(\"sm\", width) && (\n                <ListItemText\n                  className={classes.username}\n                  primary={\n                    <Typography color=\"textPrimary\">Username</Typography>\n                  }\n                />\n              )}\n            </ListItem>\n          </Box>\n          <Link\n                to=\"/\"\n              >\n            <PowerSettingsNewIcon />\n          </Link>\n        </Toolbar>\n      </AppBar>\n      <Hidden xsDown>\n        <Drawer //  both drawers can be combined into one for performance\n          variant=\"permanent\"\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          open={false}\n        >\n          <List>\n            {menuItems.map((element, index) => (\n              <Link\n                to={element.link}\n                className={classes.menuLink}\n                onClick={element.onClick}\n                key={index}\n                ref={(node) => {\n                  links.current[index] = node;\n                }}\n              >\n                <Tooltip\n                  title={element.name}\n                  placement=\"right\"\n                  key={element.name}\n                >\n                  <ListItem\n                    selected={selectedTab === element.name}\n                    button\n                    divider={index !== menuItems.length - 1}\n                    className={classes.permanentDrawerListItem}\n                    onClick={() => {\n                      links.current[index].click();\n                    }}\n                    aria-label={\n                      element.name === \"Logout\"\n                        ? \"Logout\"\n                        : `Go to ${element.name}`\n                    }\n                  >\n                    <ListItemIcon className={classes.justifyCenter}>\n                      {element.icon.desktop}\n                    </ListItemIcon>\n                  </ListItem>\n                </Tooltip>\n              </Link>\n            ))}\n          </List>\n        </Drawer>\n      </Hidden>\n      <NavigationDrawer\n        menuItems={menuItems.map((element) => ({\n          link: element.link,\n          name: element.name,\n          icon: element.icon.mobile,\n          onClick: element.onClick,\n        }))}\n        anchor=\"left\"\n        open={isMobileOpen}\n        selectedItem={selectedTab}\n        onClose={closeMobileDrawer}\n      />\n    </Fragment>\n  );\n}\n\nNavBar.propTypes = {\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectedTab: PropTypes.string.isRequired,\n  width: PropTypes.string.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withWidth()(withStyles(styles, { withTheme: true })(NavBar));\n","import React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Snackbar, withStyles } from \"@material-ui/core\";\n\nconst styles = (theme) => ({\n  root: {\n    backgroundColor: theme.palette.primary.main,\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n});\n\nfunction ConsecutiveSnackbars(props) {\n  const { classes, getPushMessageFromChild } = props;\n  const [isOpen, setIsOpen] = useState(false);\n  const [messageInfo, setMessageInfo] = useState({});\n  const queue = useRef([]);\n\n  const processQueue = useCallback(() => {\n    if (queue.current.length > 0) {\n      setMessageInfo(queue.current.shift());\n      setIsOpen(true);\n    }\n  }, [setMessageInfo, setIsOpen, queue]);\n\n  const handleClose = useCallback((_, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  const pushMessage = useCallback(message => {\n    queue.current.push({\n      message,\n      key: new Date().getTime(),\n    });\n    if (isOpen) {\n      // immediately begin dismissing current message\n      // to start showing new one\n      setIsOpen(false);\n    } else {\n      processQueue();\n    }\n  }, [queue, isOpen, setIsOpen, processQueue]);\n\n  useEffect(() => {\n    getPushMessageFromChild(pushMessage);\n  }, [getPushMessageFromChild, pushMessage]);\n\n  return (\n    <Snackbar\n      disableWindowBlurListener\n      key={messageInfo.key}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n      open={isOpen}\n      autoHideDuration={6000}\n      onClose={handleClose}\n      onExited={processQueue}\n      ContentProps={{\n        classes: {\n          root: classes.root,\n        },\n      }}\n      message={\n        <span>{messageInfo.message ? messageInfo.message.text : null}</span>\n      }\n    />\n  );\n\n}\n\nConsecutiveSnackbars.propTypes = {\n  getPushMessageFromChild: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ConsecutiveSnackbars);\n","const data = [\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image1.jpg`,\n    name: \"Markus\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image2.jpg`,\n    name: \"David\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image3.jpg`,\n    name: \"Arold\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image4.jpg`,\n    name: \"Joanic\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image5.jpg`,\n    name: \"Sophia\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image6.jpg`,\n    name: \"Aaron\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image7.jpg`,\n    name: \"Steven\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image8.jpg`,\n    name: \"Felix\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image9.jpg`,\n    name: \"Vivien\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image10.jpg`,\n    name: \"Leonie\",\n  },\n];\n\nexport default data;","import React, { memo, useCallback, useState, useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core\";\nimport Routing from \"./Routing\";\nimport NavBar from \"./navigation/NavBar\";\nimport ConsecutiveSnackbarMessages from \"../../shared/components/ConsecutiveSnackbarMessages\";\nimport smoothScrollTop from \"../../shared/functions/smoothScrollTop\";\nimport persons from \"../dummy_data/persons\";\n\nconst styles = (theme) => ({\n  main: {\n    marginLeft: theme.spacing(9),\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 0,\n    },\n  },\n});\n\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nfunction Main(props) {\n  const { classes } = props;\n  const [selectedTab, setSelectedTab] = useState(null);\n  const [hasFetchedCardChart, setHasFetchedCardChart] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [pushMessageToSnackbar, setPushMessageToSnackbar] = useState(null);\n\n  const fetchRandomMessages = useCallback(() => {\n    shuffle(persons);\n    const messages = [];\n    const iterations = persons.length;\n    const oneDaySeconds = 60 * 60 * 24;\n    let curUnix = Math.round(\n      new Date().getTime() / 1000 - iterations * oneDaySeconds\n    );\n    for (let i = 0; i < iterations; i += 1) {\n      const person = persons[i];\n      const message = {\n        id: i,\n        src: person.src,\n        date: curUnix,\n        text: \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr sed.\",\n      };\n      curUnix += oneDaySeconds;\n      messages.push(message);\n    }\n    messages.reverse();\n    setMessages(messages);\n  }, [setMessages]);\n\n  const selectDashboard = useCallback(() => {\n    smoothScrollTop();\n    document.title = \"Toggle - Dashboard\";\n    setSelectedTab(\"Dashboard\");\n    if (!hasFetchedCardChart) {\n      setHasFetchedCardChart(true);\n    }\n  }, [\n    setSelectedTab,\n    hasFetchedCardChart,\n    setHasFetchedCardChart,\n  ]);\n\n  const getPushMessageFromChild = useCallback(\n    (pushMessage) => {\n      setPushMessageToSnackbar(() => pushMessage);\n    },\n    [setPushMessageToSnackbar]\n  );\n\n  useEffect(() => {\n    fetchRandomMessages();\n  }, [\n    fetchRandomMessages,\n  ]);\n\n  return (\n    <Fragment>\n      <NavBar\n        selectedTab={selectedTab}\n        messages={messages}\n      />\n      <ConsecutiveSnackbarMessages\n        getPushMessageFromChild={getPushMessageFromChild}\n      />\n      <main className={classNames(classes.main)}>\n        <Routing\n          pushMessageToSnackbar={pushMessageToSnackbar}\n          selectDashboard={selectDashboard}\n        />\n      </main>\n    </Fragment>\n  );\n}\n\nMain.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(memo(Main));\n"],"sourceRoot":""}